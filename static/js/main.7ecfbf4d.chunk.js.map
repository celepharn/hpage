{"version":3,"sources":["api.js","components/Header/Time/Time.styles.js","components/Header/Time/Time.js","helpers/getUnit.js","components/Header/WeatherDay/WeatherDay.styles.js","components/Header/WeatherDay/WeatherDay.js","components/Header/Header.style.js","components/Header/Header.js","components/Quote/QuoteSection.style.js","components/Quote/QuoteSection.js","misc/artwork/artwork.jpg","components/Artwork/Artwork.style.js","components/Artwork/Artwork.js","GlobalStyle.js","components/Links/Links.style.js","components/Links/Links.js","App.js","index.js"],"names":["getWeather","unit","a","key","process","REACT_APP_AUTH_TOKEN","console","log","url","fetch","response","status","Error","json","data","formatData","format","min","Math","round","main","temp_min","max","temp_max","type","weather","description","getRandomQuote","H1","styled","div","H2","Wrapper","Time","ticking","getUnit","Container","Temperature","WeatherDescription","ArrowUp","span","ArrowDown","WeatherDay","weatherType","Header","weatherState","Quote","Author","QuoteSection","content","author","Content","artwork","Artwork","GlobalStyle","createGlobalStyle","Heading","h1","props","color","Link","Links","href","App","useState","weatherInfo","setWeatherInfo","currentQuote","setQuote","useEffect","then","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ecfbf4d.chunk.js","sourcesContent":["export const getWeather = async (unit) => {\n    const city = \"Guanajuato City\";\n    // const city = \"London\";\n    const key = process.env.REACT_APP_AUTH_TOKEN;\n    console.log(key)\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${unit}&appid=${key}`;\n\n    // Fetch url\n    const response = await fetch(url);\n\n    // Error handling\n    if (response.status !== 200) {\n        throw new Error(\"Could not fetch weather data\");\n    }\n\n    // Receive the weather data\n    const data = await response.json();\n\n    // Format the weather data\n    const formatData = format(data);\n    return formatData;\n};\n\n// Format the weather data to a object\nconst format = (data) => ({\n    min: `${Math.round(data.main.temp_min)}`,\n    max: `${Math.round(data.main.temp_max)}`,\n    type: data.weather[0].description,\n});\n\nexport const getRandomQuote = async () => {\n    const response = await fetch(\"https://api.quotable.io/random\");\n    const data = await response.json();\n    return data;\n};\n","import styled from \"styled-components\";\n\nexport const H1 = styled.div`\n    font-size: var(--fontVeryBig);\n    font-weight: bold;\n    color: #e06c75;\n    margin: 0;\n`;\n\nexport const H2 = styled.div`\n    font-size: var(--fontBig);\n    color: var(--lightGray);\n`;\n\nexport const Wrapper = styled.div`\n    font-family: \"fira sans\", sans-serif;\n`;\n","import Clock from \"react-live-clock\";\n\nimport { H1, H2, Wrapper } from \"./Time.styles\";\n\nconst Time = () => {\n    return (\n        <Wrapper>\n            <H1>\n                <Clock format={\"HH:mm\"} ticking={true} />\n            </H1>\n            <H2>\n                <Clock format={\"ddd\"} /> | <Clock format={\"Do\"} /> |{\" \"}\n                <Clock format={\"MMMM\"} />\n            </H2>\n        </Wrapper>\n    );\n};\n\n\nexport default Time;\n","const getUnit = (unit) => `${unit === \"metric\" ? \"°C\" : \"°F\"}`;\n\nexport default getUnit\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    font-family: \"Fira Sans\", sans-serif;\n    color: var(--lightGray);\n    text-align: right;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    height: 60px;\n    align-items: center;\n    justify-content: flex-end;\n`;\n\nexport const Temperature = styled.div`\n    font-weight: bold;\n    font-size: var(--fontBig);\n`;\n\nexport const WeatherDescription = styled.div`\n    font-size: var(--fontBig);\n`;\n\nexport const ArrowUp = styled.span`\n    color: var(--red);\n`;\n\nexport const ArrowDown = styled.span`\n    color: var(--blue);\n`;\n","import getUnit from \"../../../helpers/getUnit\";\nimport {\n    Wrapper,\n    Container,\n    Temperature,\n    WeatherDescription,\n    ArrowUp,\n    ArrowDown,\n} from \"./WeatherDay.styles\";\n\nconst WeatherDay = ({ min, max, weatherType, unit }) => {\n    return (\n        <Wrapper>\n            <Container>\n                <Temperature>\n                    <ArrowDown>↓</ArrowDown>\n                    {min} &ensp; <ArrowUp>↑</ArrowUp>\n                    {max} {getUnit(unit)}\n                </Temperature>\n            </Container>\n            <WeatherDescription>{weatherType}</WeatherDescription>\n        </Wrapper>\n    );\n};\n\nexport default WeatherDay;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\n","import styled from \"styled-components\";\nimport Time from \"./Time/Time\";\nimport WeatherDay from \"./WeatherDay/WeatherDay\";\nimport { Wrapper } from \"./Header.style\";\n\nconst Header = ({ weatherState, unit }) => (\n    <Wrapper>\n        <Time />\n        {/* Only render the component if weatherInfo has exists */}\n        {!!weatherState && (\n            <WeatherDay\n                min={weatherState.min}\n                max={weatherState.max}\n                weatherType={weatherState.type}\n                unit={unit}\n            />\n        )}\n    </Wrapper>\n);\n\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n`;\n\nexport const Quote = styled.div`\n    font-size: var(--fontMed);\n    font-style: italic;\n    color: var(--lightGray);\n`;\n\nexport const Author = styled.div`\n    font-size: var(--fontSmall);\n    color: var(--darkGray);\n`;\n","import { Wrapper, Quote, Author } from \"./QuoteSection.style\";\n\n// This shit needs to get fixed\nconst QuoteSection = ({ content, author }) => {\n    return (\n        <Wrapper>\n            <Quote>\"{content}\"</Quote>\n            <Author>- {author}</Author>\n        </Wrapper>\n    );\n};\n\nexport default QuoteSection;\n","export default __webpack_public_path__ + \"static/media/artwork.13dfb3f6.jpg\";","import styled from \"styled-components\";\nimport artwork from \"../../misc/artwork/artwork.jpg\";\n\nexport const Content = styled.div`\n    flex: 1;\n    background: url(${artwork});\n    background-size: cover;\n    background-position: center;\n    border: solid 3px var(--lightGray);\n    margin-right: 80px;\n    min-width: 15.625rem;\n    max-width: 25.5rem;\n`;\n","import { Content } from \"./Artwork.style\";\n\nconst Artwork = () => {\n    return <Content />;\n};\n\nexport default Artwork;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --maxWidth: 1280px;\n    --bg-color: #282C34;\n    --white: #fff;\n    --lightGray: #dadbdb;\n    --darkGray: #ABB2BF;\n    --red: #E06C75;\n    --green: #98C379;\n    --yellow: #E5C07B;\n    --blue: #61AFEF;\n    --purple: #C678DD;\n\n    --fontVeryBig: 3.125rem; \n    --fontBig: 1.625rem;\n    --fontMed: 1.1rem;\n    --fontSmall: 0.9rem;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: 'Fira sans', sans-serif;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n\n    h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n    \n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    /* margin-top: 80px; */\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    justify-content: center;\n`;\n\nexport const Heading = styled.h1`\n    font-size: var(--fontBig);\n    color: var(--${(props) => props.color});\n`;\n\nexport const Link = styled.a`\n    font-size: var(--fontMed);\n    padding: 0.5rem;\n    text-decoration: none;\n    color: var(--white);\n\n    :hover {\n        text-decoration: underline;\n    }\n`;\n","import { Wrapper, Container, Heading, Link } from \"./Links.style.js\";\n\nconst Links = () => {\n    return (\n        <Wrapper>\n            <Container>\n                <Heading color=\"blue\">~/uni</Heading>\n                <Link href=\"https://classroom.google.com/h\">\n                   croom\n                </Link>\n                <Link href=\"https://www.wikipedia.org/\">\n                   wiki\n                </Link>\n                <Link href=\"https://www.fciencias.unam.mx/\">fciencias</Link>\n                <Link href=\"https://gmail.com\">hotmail</Link>\n                <Link href=\"https://www.wolframalpha.com/\">\n                   walpha\n                </Link>\n            </Container>\n\n            <Container>\n                <Heading color=\"purple\">~/dev</Heading>\n                <Link href=\"https://github.com/celepharn\">github</Link>\n                <Link href=\"https://gitlab.com/\">gitlab</Link>\n                <Link href=\"https://stackoverflow.com/\">stackoverflow</Link>\n                <Link href=\"https://wiki.archlinux.org/\">archwiki</Link>\n                <Link href=\"https://www.figma.com\">figma</Link>\n            </Container>\n\n            <Container>\n                <Heading color=\"green\">~/fun</Heading>\n                <Link href=\"https://tl.net/\">tl</Link>\n                <Link href=\"https://liquipedia.net/starcraft2/Main_Page\">liquipedia</Link>\n                <Link href=\"https://monkeytype.com/\">monkeytype</Link>\n                <Link href=\"https://play.typeracer.com/\">typeracer</Link>\n                <Link href=\"https://old.reddit.com/\">reddit</Link>\n            </Container>\n        </Wrapper>\n    );\n};\n\nexport default Links;\n","import { useEffect, useState } from \"react\";\nimport { getRandomQuote, getWeather } from \"./api\";\n\n// import UnitBtn from \"./components/UnitBtn/UnitBtn\";\nimport Header from \"./components/Header/Header\";\nimport QuoteSection from \"./components/Quote/QuoteSection\";\nimport Artwork from \"./components/Artwork/Artwork\";\n\nimport GlobalStyle from \"./GlobalStyle\";\nimport Links from \"./components/Links/Links.js\";\nimport styled from \"styled-components\";\n\nconst App = () => {\n    const [weatherInfo, setWeatherInfo] = useState();\n\n    const [unit, setUnit] = useState(\"metric\");\n\n    const [currentQuote, setQuote] = useState();\n\n    useEffect(() => {\n        getWeather(unit).then((data) => setWeatherInfo(data));\n    }, [unit]);\n\n    useEffect(() => {\n        getRandomQuote().then((data) => setQuote(data));\n    }, []);\n\n    return (\n        <Wrapper>\n            <GlobalStyle />\n            <Artwork />\n            {/* <UnitBtn unit={unit} setUnit={setUnit} /> */}\n            <Container>\n                <Header weatherState={weatherInfo} unit={unit} />\n                <Links />\n                {currentQuote && (\n                    <QuoteSection\n                        content={currentQuote.content}\n                        author={currentQuote.author}\n                    />\n                )}\n            </Container>\n        </Wrapper>\n    );\n};\n\nexport default App;\n\nconst Wrapper = styled.div`\n    padding: 10rem;\n    display: flex;\n    justify-content: space-evenly;\n    background-color: var(--bg-color);\n    height: 100vh;\n`;\n\nconst Container = styled.div`\n    display: flex;\n    flex: 3;\n    flex-direction: column;\n    justify-content: space-between;\n    min-width: 26.25rem;\n    max-width: 40rem;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}